-- Add migration script here
CREATE TABLE IF NOT EXISTS feed (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    title VARCHAR,
    updated DATETIME,
    description TEXT,
    language VARCHAR,
    published DATETIME
);

CREATE TABLE IF NOT EXISTS entry (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    feed_id INTEGER UNSIGNED NOT NULL,
    title VARCHAR,
    updated DATETIME,
    content_id INTEGER,
    summary TEXT,
    source VARCHAR,
    read BOOLEAN DEFAULT FALSE,
    media_id INTEGER,
    FOREIGN KEY(media_id) REFERENCES media(id) ON DELETE CASCADE,
    FOREIGN KEY(feed_id) REFERENCES feed(id) ON DELETE CASCADE,
    FOREIGN KEY(content_id) REFERENCES content(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS author (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    name VARCHAR NOT NULL,
    uri VARCHAR,
    email VARCHAR
);

CREATE TABLE IF NOT EXISTS link (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    href VARCHAR NOT NULL,
    rel VARCHAR,
    media_type VARCHAR,
    href_lang VARCHAR,
    title VARCHAR,
    length BIGINT
);

CREATE TABLE IF NOT EXISTS content (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    body TEXT,
    content_type VARCHAR,
    length BIGINT,
    src INTEGER,
    FOREIGN KEY(src) REFERENCES link(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS category (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    term VARCHAR NOT NULL,
    scheme VARCHAR,
    label VARCHAR
);

CREATE TABLE IF NOT EXISTS media (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    title VARCHAR,
    thumbnail VARCHAR,
    description VARCHAR
);

CREATE TABLE IF NOT EXISTS media_link (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    link_id INTEGER NOT NULL,
    media_id INTEGER NOT NULL,
    FOREIGN KEY(link_id) REFERENCES link(id),
    FOREIGN KEY(media_id) REFERENCES media(id)
);

CREATE TABLE IF NOT EXISTS feed_author (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    author_id INTEGER NOT NULL,
    feed_id INTEGER NOT NULL,
    FOREIGN KEY(author_id) REFERENCES author(id),
    FOREIGN KEY(feed_id) REFERENCES feed(id)
);

CREATE TABLE IF NOT EXISTS entry_author (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    author_id INTEGER NOT NULL,
    entry_id INTEGER NOT NULL,
    FOREIGN KEY(author_id) REFERENCES author(id),
    FOREIGN KEY(entry_id) REFERENCES entry(id)
);

CREATE TABLE IF NOT EXISTS feed_link (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    link_id INTEGER NOT NULL,
    feed_id INTEGER NOT NULL,
    FOREIGN KEY(link_id) REFERENCES link(id),
    FOREIGN KEY(feed_id) REFERENCES feed(id)
);

CREATE TABLE IF NOT EXISTS entry_link (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    link_id INTEGER NOT NULL,
    entry_id INTEGER NOT NULL,
    FOREIGN KEY(link_id) REFERENCES link(id),
    FOREIGN KEY(entry_id) REFERENCES entry(id)
);

CREATE TABLE IF NOT EXISTS feed_category (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    category_id INTEGER NOT NULL,
    feed_id INTEGER NOT NULL,
    FOREIGN KEY(category_id) REFERENCES category(id),
    FOREIGN KEY(feed_id) REFERENCES feed(id)
);

CREATE TABLE IF NOT EXISTS entry_category (
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    category_id INTEGER NOT NULL,
    entry_id INTEGER NOT NULL,
    FOREIGN KEY(category_id) REFERENCES category(id),
    FOREIGN KEY(entry_id) REFERENCES entry(id)
);
